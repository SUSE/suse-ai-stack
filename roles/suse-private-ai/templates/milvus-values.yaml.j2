global:
  imagePullSecrets:
  - {{ appco_secret }}
cluster:
  enabled: {{ enable_milvus_cluster_deployment | default(true) }}
{% if "dp.apps.rancher.io" in  milvus_helm_repo  %}
image:
  all:
    registry: dp.apps.rancher.io
    repository: containers/milvus
    tag: {{ milvus_image_version }}
    pullPolicy: IfNotPresent
{% endif %}
standalone:
  persistence:
    persistentVolumeClaim:
      storageClass: {{ storage_class }}
etcd:
  replicaCount: 1
  persistence:
{% if "dp.apps.rancher.io" in  milvus_helm_repo  %}
    storageClassName: {{ storage_class }}
{% else %}
    storageClass: {{ storage_class }}
{% endif %}
minio:
{% if enable_minio_standalone_deployment %}
  mode: standalone
{% else %}
  mode: distributed
  replicas: 4
{% endif %}
{% if "dp.apps.rancher.io" in  milvus_helm_repo  %}
  rootUser: "admin"
  rootPassword: "adminminio"
{% else %}
  accessKey: "minioadmin"
  secretKey: "minioadmin"
{% endif %}
  persistence:
    storageClass: {{ storage_class }}
    size: 20Gi
  resources:
    requests:
      memory: 1024Mi
{% if "dp.apps.rancher.io" in  milvus_helm_repo  %}
kafka:
  enabled: {{ enable_milvus_cluster_deployment | default(true) }}
  cluster:
    nodeCount:
      controller: 1
      broker: 1
  persistence:
    storageClassName: {{ storage_class }}
{% else %}
pulsar:
  enabled: {{ enable_milvus_cluster_deployment | default(true) }}
  defaultPulsarImageRepository: rtamalin/apache-pulsar
  defaultPulsarImageTag: 3.3.2
  affinity:
    anti-affinity: false
  autorecovery:
    resources:
      requests:
        cpu: 0.1
        memory: 256Mi
  proxy:
    replicaCount: 1
    resources:
      requests:
        cpu: 0.2
        memory: 256Mi
    configData:
      PULSAR_MEM: >
        -Xms256m -Xmx256m
      PULSAR_GC: >
         -XX:MaxDirectMemorySize=256m
  bookkeeper:
    replicaCount: 2
    volumes:
      journal:
        local_storage: false
        storageClassName: {{ storage_class }}
      ledgers:
        local_storage: false
        storageClassName: {{ storage_class }}
      common:
        local_storage: false
        storageClassName: {{ storage_class }}
    resources:
      requests:
        cpu: 0.2
        memory: 512Mi
    configData:
      PULSAR_MEM: >
        -Xms512m -Xmx512m
      PULSAR_GC: >
        -XX:MaxDirectMemorySize=512m
        -Dio.netty.leakDetectionLevel=disabled
        -Dio.netty.recycler.linkCapacity=1024
        -XX:+UseG1GC -XX:MaxGCPauseMillis=10
        -XX:+ParallelRefProcEnabled
        -XX:+UnlockExperimentalVMOptions
        -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=32
        -XX:ConcGCThreads=32 -XX:G1NewSizePercent=50
        -XX:+DisableExplicitGC
        -XX:-ResizePLAB
        -XX:+ExitOnOutOfMemoryError
        -XX:+PerfDisableSharedMem
        -XX:+PrintGCDetails
  zookeeper:
    replicaCount: 1
    affinity:
      anti-affinity: false
    volumes:
      data:
        storageClassName: {{ storage_class }}
    resources:
      requests:
        cpu: 0.1
        memory: 256Mi
    configData:
      PULSAR_MEM: >
        -Xms256m
        -Xmx256m
      PULSAR_GC: >
        -Dcom.sun.management.jmxremote
        -Djute.maxbuffer=10485760
        -XX:+ParallelRefProcEnabled
        -XX:+UnlockExperimentalVMOptions
        -XX:+DoEscapeAnalysis -XX:+DisableExplicitGC
        -XX:+PerfDisableSharedMem
        -Dzookeeper.forceSync=no
  broker:
    replicaCount: 2
    volumes:
      data:
        storageClassName: {{ storage_class }}
    resources:
      requests:
        cpu: 0.2
        memory: 512Mi
    configData:
      PULSAR_MEM: >
        -Xms512m
        -Xmx512m
      PULSAR_GC: >
        -XX:MaxDirectMemorySize=512m
        -Dio.netty.leakDetectionLevel=disabled
        -Dio.netty.recycler.linkCapacity=1024
        -XX:+ParallelRefProcEnabled
        -XX:+UnlockExperimentalVMOptions
        -XX:+DoEscapeAnalysis
        -XX:ParallelGCThreads=32
        -XX:ConcGCThreads=32
        -XX:G1NewSizePercent=50
        -XX:+DisableExplicitGC
        -XX:-ResizePLAB
        -XX:+ExitOnOutOfMemoryError
  autorecovery:
    resources:
      requests:
        memory: 512Mi
        cpu: 1
{% endif %}
#{% if enable_gpu_operator %}
  #indexNode:
  #  resources:
  #    requests:
  #      nvidia.com/gpu: "1"
  #    limits:
  #      nvidia.com/gpu: "1"
  #queryNode:
  #  resources:
  #    requests:
  #      nvidia.com/gpu: "1"
  #    limits:
  #      nvidia.com/gpu: "1"
#{% endif %}

{% if enable_suse_observability | default(False) %}
extraConfigFiles:
  user.yaml: |+
    trace:
      exporter: jaeger
      sampleFraction: 1
      jaeger:
        url: "http://opentelemetry-collector.{{ suse_observability_namespace | default('suse-observability') }}.svc.cluster.local:14268/api/traces"
{% endif %}
