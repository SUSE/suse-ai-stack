---
- name: Install SUSE packages "{{ suse_packages }}"
  become: true
  community.general.zypper:
    name: "{{ suse_packages }}"
    state: latest
    update_cache: true
  register: install_suse_packages_result
  until: "'rc' not in install_suse_packages_result or install_suse_packages_result.rc == 0"
  retries: 10
  delay: 60
  when: false

- name: Install SUSE packages "{{ suse_packages }}" sle-micro
  become: true
  shell: |
    transactional-update --continue -n pkg install --auto-agree-with-licenses {{ suse_packages | join(' ') }}
  when:
    - suse_packages | length > 0
    - ansible_distribution == 'SL-Micro'

# Since unzip is not available in sle-micro, this is a workaround.
- name: Install unzip package required to install opentofu on sle-micro
  become: true
  shell: |
    transactional-update --continue -n pkg install --auto-agree-with-licenses https://download.opensuse.org/distribution/leap/15.6/repo/oss/{{ ansible_facts.architecture }}/unzip-6.00-150000.4.11.1.{{ ansible_facts.architecture }}.rpm
  when: ansible_distribution == 'SL-Micro'

- name: Install SUSE packages "{{ suse_packages }}" sles
  become: true
  shell: |
    zypper --non-interactive install {{ suse_packages | join(' ') }}
  when:
    - suse_packages | length > 0
    - ansible_distribution == 'SLES'

- name: Install Longhorn dependency packages
  become: true
  community.general.zypper:
    name: ["open-iscsi", "nfs-client", "nfs-utils", "cryptsetup", "device-mapper"]
    state: latest
    update_cache: true
  register: install_suse_packages_result
  until: "'rc' not in install_suse_packages_result or install_suse_packages_result.rc == 0"
  retries: 10
  delay: 60
  when: cloud_provider == "aws" and enable_longhorn

- name: Add NVIDIA graphics drivers for SLE repo
  become: true
  community.general.zypper_repository:
    name: nvidia-sle15sp6-main
    repo: 'https://download.nvidia.com/suse/sle15sp6/'
    state: present
    auto_import_keys: true
    runrefresh: true
  when: (enable_gpu_operator | default(false)) and not (use_nvidia_driver_installer | default(false))

- name: Install NVIDIA graphic drivers packages
  become: true
  community.general.zypper:
    name: ["nvidia-open-driver-G06-signed-kmp={{ driver_version | default('570.144') }}", "nvidia-compute-utils-G06={{ driver_version | default('570.144') }}"]
    state: latest
    update_cache: true
  register: install_suse_packages_result
  until: "'rc' not in install_suse_packages_result or install_suse_packages_result.rc == 0"
  retries: 10
  delay: 60
  when: (enable_gpu_operator | default(false)) and not (use_nvidia_driver_installer | default(false))

# NOTE: for SL Micro, package installation requires transactional update.
# Therefore, we need to do reboot for the changes to take effect.
- name: Reboot after transactional update
  become: true
  reboot:
    msg: "Rebooting after transactional update for the changes take effect."

- name: Wait for port 22
  wait_for:
    port: 22
    timeout: "{{ reboot_wait_timeout }}"

- name: Pause
  ansible.builtin.pause:
    seconds: 30

- name: Check that driver package is installed after the reboot
  become: true
  command: rpm -q {{ item }}
  register: check_installed
  loop:
    - "nvidia-open-driver-G06-signed-kmp-default"
    - "nvidia-compute-utils-G06"
  when: (enable_gpu_operator | default(false)) and not (use_nvidia_driver_installer | default(false))

- name: Check that each package is installed after the reboot
  become: true
  command: rpm -q {{ item }}
  loop: "{{ suse_packages }}"
  register: check_installed
  when:
    - suse_packages | length > 0

- name: Print if any package is not installed
  debug:
    msg: "One or more packages were not installed successfully."
  when: check_installed.results | selectattr('rc', 'ne', 0) | list | length > 0
