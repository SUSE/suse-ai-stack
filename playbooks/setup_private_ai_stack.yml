---

- name: Create Resources
  hosts: localhost
  connection: local
  tasks:
    - name: Create Resources
      include_role:
        name: vm
      when:
        - (not do_not_install_vm | default(False)) | bool
      vars:
        vm_hostname: mgmt-rancher
        vm_instance_name: mgmt-rancher
        vm_mac_address: "{{ private_ai_vm_mac_address | default('52:54:00:6C:3C:88') }}"
        vm_libvirt_network_params: "{{ private_ai_vm_libvirt_network_params | default('') }}"

    - name: Show Mgmt Cluster VM IP
      debug:
        msg: "Login to the mgmt-rancher vm with 'ssh {{ vm_ansible_user | default('ai') }}@{{ vm_ip }}'"

    - name: Show SUSE AI Cluster VM IP
      debug:
        msg: "Login to the suse-ai vm with 'ssh {{ vm_ansible_user | default('ai') }}@{{ suse_ai_vm_ip }}'"
      when: suse_ai_cluster is defined

    - name: Show SUSE Observability Cluster VM IP
      debug:
        msg: "Login to the suse-observability vm with 'ssh {{ vm_ansible_user | default('ai') }}@{{ suse_observability_vm_ip }}'"
      when: suse_observability_cluster is defined and enable_suse_observability | default('False') | bool

    - name: Generate a random string
      set_fact:
        unique_id: "{{ lookup('community.general.random_string', length=5, upper=false, numbers=false, special=false) }}"
      run_once: true

    - name: Set ingress host when external-dns
      set_fact:
        rancher_host: rancher-{{ github_username }}-{{hostvars['localhost']['unique_id']}}.{{ external_dns_domain_filter | default('suseclouddev.com') }}
        longhorn_host: longhorn-{{ github_username }}-{{hostvars['localhost']['unique_id']}}.{{ external_dns_domain_filter | default('suseclouddev.com') }}
        open_webui_host: open-webui-{{ github_username }}-{{hostvars['localhost']['unique_id']}}.{{ external_dns_domain_filter | default('suseclouddev.com') }}
        suse_observability_host: suse-observability-{{ github_username }}-{{hostvars['localhost']['unique_id']}}.{{ external_dns_domain_filter | default('suseclouddev.com') }}
        suse_observability_otel_host: suse-observability-otel-collector-{{ github_username }}-{{hostvars['localhost']['unique_id']}}.{{ external_dns_domain_filter | default('suseclouddev.com') }}
      when: enable_external_dns | default(false)

    - name: Set ingress host when no external-dns
      set_fact:
        rancher_host: "{{ rancher_hostname | default('suse-rancher.demo') }}"
        longhorn_host: "{{ longhorn_hostname | default('suse-longhorn') }}"
        open_webui_host: "{{ open_webui_hostname | default('suse-ollama-webui') }}"
        suse_observability_host: "{{ suse_observability_hostname | default('suse-observability') }}"
        suse_observability_otel_host: "{{ suse_observability_otel_hostname |  default('suse-observability-otel-collector') }}"
      when: not (enable_external_dns | default(false))

    - name: Set AI and Observabilty allowed host group and ips
      set_fact:
        ai_allowed_hg: "{{ 'suse_ai_cp_master' if suse_ai_cluster is defined else 'mgmt_cp_master' }}"
        observ_allowed_hg: "{{ 'suse_observability_cp_master' if suse_observability_cluster is defined and enable_suse_observability | default(false) else 'mgmt_cp_master' }}"
        suse_ai_vm_ip: "{{ hostvars['localhost']['suse_ai_vm_ip'] | default(hostvars['localhost']['vm_ip']) }}"
        suse_observability_vm_ip: "{{ hostvars['localhost']['suse_observability_vm_ip'] | default(hostvars['localhost']['vm_ip']) }}"

- name: Setup the right python interpreter based on the distro
  import_playbook: setup_python_interpreter.yml

- name: Define mgmt cluster nodes
  import_playbook: define_nodes_mgmt_cluster.yml
  vars:
    python_interpreter: "{{ hostvars['localhost']['python_interpreter'] }}"

- name: Define suse ai cluster nodes
  import_playbook: define_nodes_suse_ai_cluster.yml
  vars:
    suse_ai_python_interpreter: "{{ hostvars['localhost']['suse_ai_python_interpreter'] }}"
  when: suse_ai_cluster is defined

- name: Define suse observability cluster nodes
  import_playbook: define_nodes_suse_observability_cluster.yml
  vars:
    suse_observability_python_interpreter: "{{ hostvars['localhost']['suse_observability_python_interpreter'] }}"
  when: suse_observability_cluster is defined and enable_suse_observability | default('False') | bool

- name: Registration and package install on all nodes
  import_playbook: registration_package_install.yml

- name: Update /etc/hosts on all nodes
  import_playbook: update_hosts_entry.yml
  vars:
    vm_ip: "{{ hostvars['localhost']['vm_ip'] }}"
    suse_ai_vm_ip: "{{ hostvars['localhost']['suse_ai_vm_ip'] }}"
    suse_observability_vm_ip: "{{ hostvars['localhost']['suse_observability_vm_ip'] }}"
    rancher_host: "{{ hostvars['localhost']['rancher_host'] }}"
    open_webui_host: "{{ hostvars['localhost']['open_webui_host'] }}"
    longhorn_host: "{{ hostvars['localhost']['longhorn_host'] }}"
    suse_observability_host: "{{ hostvars['localhost']['suse_observability_host'] }}"
    suse_observability_otel_host: "{{ hostvars['localhost']['suse_observability_otel_host'] }}"

# Set up RKE2 on mgmt, suse_ai and suse_observability clusters
- name: Deploy RKE2 on mgmt cluster
  import_playbook: deploy_rke2_mgmt.yml

- name: Deploy RKE2 on suse observability cluster
  import_playbook: deploy_rke2_suse_observability.yml
  when: suse_observability_cluster is defined and enable_suse_observability | default('False') | bool

- name: Deploy RKE2 on suse ai cluster
  import_playbook: deploy_rke2_suse_ai.yml
  when: suse_ai_cluster is defined

- name: Label nodes and deploy Nvidia driver installer
  import_playbook: deploy_nvidia_driver_installer.yml
  vars:
    ai_allowed_hg: "{{ 'suse_ai_cp_master' if suse_ai_cluster is defined else 'mgmt_cp_master' }}"
    ai_hg: "{{ groups['suse_ai_cluster'] if suse_ai_cluster is defined else groups['mgmt_cluster'] }}"
  when: use_nvidia_driver_installer | default(false)

- name: Deploy Rancher on mgmt cluster
  import_playbook: deploy_rancher_mgmt.yml
  vars:
    rancher_host: "{{ hostvars['localhost']['rancher_host'] }}"

- name: Update core dns entries on suse-ai cluster
  import_playbook: update_core_dns.yml
  vars:
    host_entries: |
      {{
        [hostvars['localhost']['vm_ip'] ~ ' ' ~ hostvars['localhost']['rancher_host'] ]
        + ([hostvars['localhost']['suse_observability_vm_ip'] ~ ' ' ~ hostvars['localhost']['suse_observability_host']] if enable_suse_observability | default(false) else [])
        + ([hostvars['localhost']['suse_observability_vm_ip'] ~ ' ' ~ hostvars['localhost']['suse_observability_otel_host']] if enable_suse_observability | default(false) else [])
      }}
    allowed_hg: 'suse_ai_cp_master'
  when: not (enable_external_dns | default(false)) and suse_ai_cluster is defined

- name: Update core dns entries on suse-observability cluster
  import_playbook: update_core_dns.yml
  vars:
    host_entries: |
      {{
        [hostvars['localhost']['vm_ip'] ~ ' ' ~ hostvars['localhost']['rancher_host'] ]
        + ([hostvars['localhost']['suse_observability_vm_ip'] ~ ' ' ~ hostvars['localhost']['suse_observability_host']] if enable_suse_observability | default(false) else [])
        + ([hostvars['localhost']['suse_observability_vm_ip'] ~ ' ' ~ hostvars['localhost']['suse_observability_otel_host']] if enable_suse_observability | default(false) else [])
      }}
    allowed_hg: 'suse_observability_cp_master'
  when: not (enable_external_dns | default(false)) and suse_observability_cluster is defined and enable_suse_observability | default(false)

- name: Deploy NVIDIA GPU operator
  import_playbook: deploy_gpu_operator.yml
  vars:
    allowed_hg: "{{ hostvars['localhost']['ai_allowed_hg'] }}"
  when: enable_gpu_operator | default(false)

- name: Deploy SUSE Observability and SUSE Observability extension
  import_playbook: deploy_suse_observability.yml
  vars:
    allowed_hg: "{{ hostvars['localhost']['observ_allowed_hg'] }}"
  when: enable_suse_observability | default(false)

- name: Deploy OTEL collector
  import_playbook: deploy_otel_collector_suse_ai.yml
  vars:
    allowed_hg: "{{ hostvars['localhost']['ai_allowed_hg'] }}"
    api_key: "{{ hostvars['suse-observability']['suse_observability_api_key'] if suse_observability_cluster is defined else hostvars['mgmt-rancher']['suse_observability_api_key'] }}"
  when: enable_suse_observability | default(false)

- name: Deploy SUSE Observability Agent
  import_playbook: deploy_observability_agent_suse_ai.yml
  vars:
    allowed_hg: "{{ hostvars['localhost']['ai_allowed_hg'] }}"
    api_key: "{{ hostvars['suse-observability']['suse_observability_api_key'] if suse_observability_cluster is defined else hostvars['mgmt-rancher']['suse_observability_api_key'] }}"
  when: enable_suse_observability | default(false)

- name: Deploy AI components
  import_playbook: deploy_suse_ai.yml
  vars:
    allowed_hg: "{{ hostvars['localhost']['ai_allowed_hg'] }}"

- name: Import the suse-ai cluster as a downstream cluster to be managed by rancher
  import_playbook: import_suse_ai_cluster.yml
  when: suse_ai_cluster is defined

- name: Import the suse-observability cluster as a downstream cluster to be managed by rancher
  import_playbook: import_suse_observability_cluster.yml
  when: suse_observability_cluster is defined and enable_suse_observability | default('False') | bool

- name: Display Access URL and credentials
  hosts: localhost
  connection: local
  tasks:
    - name: Set Access URL and credentials
      set_fact:
        access_msg: "{{ access_msg | default([]) + [ item.msg | string ] }}"
      when: item.eval
      with_items:
        - msg: "Make sure to update the /etc/hosts file: {{ vm_ip }} mgmt-rancher {{ rancher_host }}"
          eval: "{{ not (enable_external_dns | default(False)) }}"
        - msg: "Make sure to update the /etc/hosts file: {{ hostvars['localhost']['suse_ai_vm_ip'] | default(hostvars['localhost']['vm_ip'])}} suse-ai {{ open_webui_host }}"
          eval: "{{ not (enable_external_dns | default(False)) }}"
        - msg: "Make sure to update the /etc/hosts file: {{ hostvars['localhost']['suse_ai_vm_ip'] | default(hostvars['localhost']['vm_ip'])}} {{ longhorn_host }}"
          eval: "{{ not (enable_external_dns | default(False)) and (enable_longhorn | default(False) | bool) }}"
        - msg: "Make sure to update the /etc/hosts file: {{ hostvars['localhost']['suse_observability_vm_ip'] | default(hostvars['localhost']['vm_ip'])}} {{ suse_observability_host }}"
          eval: "{{ not (enable_external_dns | default(False)) and (enable_suse_observability | default(False) | bool) }}"
        - msg: "To access rancher UI, point your browser to https://{{ rancher_host }} and login with user=admin and password={{ hostvars['mgmt-rancher']['rancher_password']  }}"
          eval: true
        - msg: "To access longhorn UI, point your browser to http://{{ longhorn_host }} and login with user={{  hostvars[groups[ai_allowed_hg][0]]['lh_username'] | default('admin')}} and password={{  hostvars[groups[ai_allowed_hg][0]]['lh_password'] | default('longhorn')}}"
          eval: "{{ enable_longhorn | default(False) | bool }}"
        - msg: "To access open-webui, point your browser to https://{{ open_webui_host }} and login with user={{ hostvars[groups[ai_allowed_hg][0]]['oi_admin_email'] | default('admin@suse-private-ai.org') }} and password={{ hostvars[groups[ai_allowed_hg][0]]['oi_admin_password'] | default('WelcomeToAI') }}"
          eval: "{{ not deploy_rancher_only | default(False) | bool }}"
        - msg: "To access suse-observability, point your browser to https://{{ suse_observability_host }} and login with user=admin and password={{ hostvars[groups[observ_allowed_hg][0]]['suse_observability_admin_password'] | default('') }}"
          eval: "{{ enable_suse_observability | default(False) | bool }}"

    - name: Show Access URL and credentials
      debug:
        msg: "{{ access_msg }}"

    - name: Output access msg to a file
      copy:
        dest: "/tmp/access"
        content: "{{ access_msg }}"
