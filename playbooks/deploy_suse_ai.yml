- name: Read tofu output
  import_playbook: read_tofu_output.yml

- name: Display SSH access
  import_playbook: ssh-access.yml

- name: Deploy SUSE AI
  hosts: rke2_servers[0]
  tasks:
    - name: Set AI and Observabilty IP
      set_fact:
        suse_ai_vm_ip: "{{ hostvars['localhost']['suse_ai_vm_ip'] | default(hostvars['localhost']['vm_ip']) }}"
        suse_observability_vm_ip: "{{ hostvars['localhost']['suse_observability_vm_ip'] | default(hostvars['localhost']['vm_ip']) }}"

    - name: Update core dns entries on suse-ai cluster
      import_role: 
        name: update-coredns
      vars:
        host_entries: |
          {{
            [hostvars['localhost']['vm_ip'] ~ ' ' ~ hostvars['localhost']['rancher_host'] ]
            + ([suse_observability_vm_ip ~ ' ' ~ hostvars['localhost']['suse_observability_host']] if enable_suse_observability | default(false) else [])
            + ([suse_observability_vm_ip ~ ' ' ~ hostvars['localhost']['suse_observability_otel_host']] if enable_suse_observability | default(false) else [])
          }}
      when: not (enable_external_dns | default(false)) and suse_ai_cluster is defined

    - name: Set target when no external-dns
      set_fact:
        suse_ai_target: "{{ ansible_host }}"
      when: not ( enable_external_dns | default(false))

    - name: Set target when external-dns
      set_fact:
        suse_ai_target: "{{ hostvars['localhost']['suse_ai_ingress_fqdn'] | default(hostvars['localhost']['ingress_fqdn']) }}"
      when: enable_external_dns | default(false)

    - name: Read suse observability api key
      ansible.builtin.slurp:
        src: "../suse_observability_api_key.txt"
      delegate_to: localhost
      register: suse_observability_api_key_file_contents
      when: enable_suse_observability | default(false)

    - name: set fact api key
      set_fact:
        api_key:  "{{ suse_observability_api_key_file_contents['content'] | b64decode | trim }}"
      when: enable_suse_observability | default(false)

    - name: Print suse observability api key
      debug:
        msg: "{{ api_key }}"
      when: enable_suse_observability | default(false)

    - name: Deploy OTEL Collector
      import_role:
        name: opentelemetry-collector
      vars:
        suse_observability_api_key: "{{ api_key }}"
        otel_endpoint: "{% if suse_observability_cluster is defined %}http://{{ hostvars['localhost']['suse_observability_otel_host'] }}:80{% endif %}"
      when: enable_suse_observability | default(false)

    - name: Deploy SUSE Observability Agent on suse ai cluster
      import_role:
        name: suse-observability-agent
      vars:
        suse_observability_api_key: "{{ api_key }}"
        cluster_name: "{{ 'suse-ai' if suse_ai_cluster is defined }}"
        ss_url: "{% if suse_observability_cluster is defined %}http://{{ hostvars['localhost']['suse_observability_host'] }}/receiver/stsAgent{% endif %}"
        suse_observabiltity_host: "{{ hostvars['localhost']['suse_observability_host'] }}"
      when: enable_suse_observability | default(false)

    - name: Deploy SUSE AI
      import_role:
        name: suse-private-ai
      vars:
        open_webui_host: "{{ hostvars['localhost']['open_webui_host'] }}"

    - name: Get rancher token
      import_role:
        name: rancher-token
      vars:
        rancher_host: "{{ hostvars['localhost']['rancher_host'] }}"
        rancher_bootstrap_password: "{{ rancher_boostrap_password | default('rancher') }}"
      when: suse_ai_cluster is defined

    - name: Import suse_ai_cluster
      import_role:
        name: import-cluster
      vars:
        rancher_url: "https://{{ hostvars['localhost']['rancher_host'] }}"
        rancher_token: "{{ hostvars['mgmt-rancher']['rancher_token'] }}"
        cluster_name: suse-ai
      when: suse_ai_cluster is defined

    - name: Show SUSE AI VM login
      debug:
        msg: |
          "SUSE AI kubeapi: {{ hostvars['localhost']['suse_ai_kubeapi_fqdn'] | default(hostvars['localhost']['kubeapi_fqdn']) }}"
          "SUSE AI ingress: {{ hostvars['localhost']['suse_ai_ingress_fqdn'] | default(hostvars['localhost']['ingress_fqdn'])}}"
          "Login to the suse-ai vm with 'ssh {{ hostvars['localhost']['vm_ansible_user'] | default('ai') }}@{{ hostvars['localhost']['suse_ai_vm_ip'] | default(hostvars['localhost']['vm_ip'])}}'"
